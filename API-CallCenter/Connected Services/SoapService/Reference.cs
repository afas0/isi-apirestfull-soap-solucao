//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoapService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TicketSoap", Namespace="http://schemas.datacontract.org/2004/07/WCF_Soap_Service")]
    public partial class TicketSoap : object
    {
        
        private System.Nullable<int> AvaliacaoField;
        
        private int ClienteIdField;
        
        private System.Nullable<System.DateTime> DataCriacaoField;
        
        private string EstadoAssistenciaField;
        
        private System.Nullable<int> OperadorIdField;
        
        private string TicketDescricaoField;
        
        private int TicketIdField;
        
        private string TipoAssistenciaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Avaliacao
        {
            get
            {
                return this.AvaliacaoField;
            }
            set
            {
                this.AvaliacaoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClienteId
        {
            get
            {
                return this.ClienteIdField;
            }
            set
            {
                this.ClienteIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DataCriacao
        {
            get
            {
                return this.DataCriacaoField;
            }
            set
            {
                this.DataCriacaoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EstadoAssistencia
        {
            get
            {
                return this.EstadoAssistenciaField;
            }
            set
            {
                this.EstadoAssistenciaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OperadorId
        {
            get
            {
                return this.OperadorIdField;
            }
            set
            {
                this.OperadorIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TicketDescricao
        {
            get
            {
                return this.TicketDescricaoField;
            }
            set
            {
                this.TicketDescricaoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketId
        {
            get
            {
                return this.TicketIdField;
            }
            set
            {
                this.TicketIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TipoAssistencia
        {
            get
            {
                return this.TipoAssistenciaField;
            }
            set
            {
                this.TipoAssistenciaField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoapService.InterfaceSoapService")]
    public interface InterfaceSoapService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceSoapService/AddProduto", ReplyAction="http://tempuri.org/InterfaceSoapService/AddProdutoResponse")]
        System.Threading.Tasks.Task AddProdutoAsync(string nome, string descricao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceSoapService/AddTicket", ReplyAction="http://tempuri.org/InterfaceSoapService/AddTicketResponse")]
        System.Threading.Tasks.Task AddTicketAsync(string descricao, string tipoAssistencia, string estadoAssistencia, System.Nullable<int> avaliacao, int clienteId, System.Nullable<int> operadorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceSoapService/GetTickets", ReplyAction="http://tempuri.org/InterfaceSoapService/GetTicketsResponse")]
        System.Threading.Tasks.Task<SoapService.TicketSoap[]> GetTicketsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface InterfaceSoapServiceChannel : SoapService.InterfaceSoapService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class InterfaceSoapServiceClient : System.ServiceModel.ClientBase<SoapService.InterfaceSoapService>, SoapService.InterfaceSoapService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public InterfaceSoapServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(InterfaceSoapServiceClient.GetBindingForEndpoint(endpointConfiguration), InterfaceSoapServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public InterfaceSoapServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(InterfaceSoapServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public InterfaceSoapServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(InterfaceSoapServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public InterfaceSoapServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }

        public InterfaceSoapServiceClient()
        {
        }

        public System.Threading.Tasks.Task AddProdutoAsync(string nome, string descricao)
        {
            return base.Channel.AddProdutoAsync(nome, descricao);
        }
        
        public System.Threading.Tasks.Task AddTicketAsync(string descricao, string tipoAssistencia, string estadoAssistencia, System.Nullable<int> avaliacao, int clienteId, System.Nullable<int> operadorId)
        {
            return base.Channel.AddTicketAsync(descricao, tipoAssistencia, estadoAssistencia, avaliacao, clienteId, operadorId);
        }
        
        public System.Threading.Tasks.Task<SoapService.TicketSoap[]> GetTicketsAsync()
        {
            return base.Channel.GetTicketsAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_InterfaceSoapService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpsBinding_InterfaceSoapService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_InterfaceSoapService))
            {
                return new System.ServiceModel.EndpointAddress("http://soap-service-hkc8gzhra4fcdyd0.spaincentral-01.azurewebsites.net/SoapServic" +
                        "e.svc");
            }
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpsBinding_InterfaceSoapService))
            {
                return new System.ServiceModel.EndpointAddress("https://soap-service-hkc8gzhra4fcdyd0.spaincentral-01.azurewebsites.net/SoapServi" +
                        "ce.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_InterfaceSoapService,
            
            BasicHttpsBinding_InterfaceSoapService,
        }
    }
}
